name: Python Distribution

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    name: Build Python distribution
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yaml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8.5
          miniconda-version: 'latest'
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: insar-eventnet
          environment-file: environment.yaml
      - name: Activate Conda & Install Additional Dependencies
        run: conda install pip
      - name: Install Python Build
        run: python -m pip install --upgrade build
      - name: Build
        run: python3 -m build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: insar-eventnet-distribution
          path: dist
  publish-pypi:
    name: Publish Python distributions to PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install Twine
      run: pip install twine
    - name: Download Dist Artifacts
      uses: actions/download-artifact@v3
      with:
        name: insar-eventnet-distribution
        path: dist
    - name: Check Packages
      run: twine check dist/*
    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
  publish-release:
    name: Publish Python distributions to GitHub release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Dist Artifacts
        uses: actions/download-artifact@v3
        with:
          name: insar-eventnet-distribution
          path: dist
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*